{"version":3,"sources":["components/Navigation/Navigation.tsx","App.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PeoplePage/PeopleLink/PeopleLink.tsx","types/QueryParams.ts","types/SortTypes.ts","utils/searchHelper.ts","components/PeoplePage/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeopleFilter/SearchLink/SearchLink.tsx","components/PeoplePage/PeopleFilter/PeopleFilter.tsx","components/PeoplePage/PeoplePage.tsx","components/ErrorPage/ErrorPage.tsx","Root.tsx","index.tsx"],"names":["getNavClass","isActive","classNames","Navigation","className","to","App","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","Ping","size","speed","color","PeopleLink","person","slug","sex","name","QueryParams","SortTypes","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","PeopleTable","people","useParams","useSearchParams","searchParams","sort","get","Sort","order","Order","findPersonByName","find","currentPerson","useEffect","selectedPerson","document","querySelector","scrollIntoView","block","behavior","window","scrollTo","top","getParent","personParent","parent","values","map","currentType","slice","toUpperCase","search","sortType","mother","motherName","undefined","father","fatherName","isPersonSelected","born","died","SearchLink","children","params","props","PeopleFilter","setSearchParams","Sex","centuries","getAll","Centuries","type","placeholder","onChange","e","param","newQuery","setSearchWith","query","target","currentCentury","century","includes","filter","length","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","Query","filteredPeople","useMemo","filterResult","queryToLower","toLowerCase","Math","ceil","person1","person2","first","second","Name","localeCompare","Born","Died","catch","finally","ErrorPage","Root","path","element","index","replace","container","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.c429c042.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst getNavClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const Navigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"\n      navbar\n      is-light\n      is-fixed-top\n      is-mobile\n      has-shadow\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink to=\"/\" className={getNavClass}>\n          Home\n        </NavLink>\n\n        <NavLink to=\"/people\" className={getNavClass}>\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\n\nimport { Navigation } from './components/Navigation';\n\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">\n    Home Page\n  </h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Ping } from '@uiball/loaders';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <Ping\n      size={55}\n      speed={1}\n      color=\"grey\"\n    />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PeopleLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`../${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","export enum QueryParams {\n  Query = 'query',\n  Sex = 'sex',\n  Centuries = 'centuries',\n  Sort = 'sort',\n  Order = 'order',\n}\n","export enum SortTypes {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import React, { useEffect } from 'react';\n\nimport classNames from 'classnames';\n\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport { PeopleLink } from '../PeopleLink/PeopleLink';\n\nimport { Person } from '../../../types';\nimport { QueryParams } from '../../../types/QueryParams';\nimport { SortTypes } from '../../../types/SortTypes';\nimport { getSearchWith } from '../../../utils/searchHelper';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get(QueryParams.Sort) || '';\n  const order = searchParams.get(QueryParams.Order) || '';\n\n  function getSearchWithSort(sortType: SortTypes) {\n    if (!sort || sort !== sortType) {\n      return getSearchWith(searchParams, { sort: sortType, order: null });\n    }\n\n    if (!order) {\n      return getSearchWith(searchParams, { sort: sortType, order: 'desc' });\n    }\n\n    return getSearchWith(searchParams, { sort: null, order: null });\n  }\n\n  const findPersonByName = (name: string) => {\n    return people.find(currentPerson => currentPerson.name === name);\n  };\n\n  useEffect(() => {\n    const selectedPerson = document.querySelector('.has-background-warning');\n\n    if (selectedPerson) {\n      selectedPerson.scrollIntoView({\n        block: 'center',\n        behavior: 'smooth',\n      });\n    } else {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    }\n  }, [slug]);\n\n  const getParent = (\n    personParent: string,\n    parent?: Person,\n  ) => {\n    return parent\n      ? <PeopleLink person={parent} />\n      : personParent;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"\n        table\n        is-striped\n        is-hoverable\n        is-narrow\n        is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.values(SortTypes).map(currentType => (\n            <th key={currentType}>\n              <span className=\"\n                is-flex\n                is-flex-wrap-nowrap\"\n              >\n                {currentType.slice(0, 1).toUpperCase() + currentType.slice(1)}\n\n                <Link\n                  to={{ search: getSearchWithSort(currentType) }}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames('fas', {\n                        'fa-sort': !sort || sort !== currentType,\n                        'fa-sort-up': sort === currentType && !order,\n                        'fa-sort-down': sort === currentType && order,\n                      })}\n                    />\n                  </span>\n                </Link>\n              </span>\n            </th>\n          ))}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = person.motherName\n            ? findPersonByName(person.motherName)\n            : undefined;\n          const father = person.fatherName\n            ? findPersonByName(person.fatherName)\n            : undefined;\n\n          const isPersonSelected = person.slug === slug;\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': isPersonSelected,\n              })}\n            >\n              <td>\n                <PeopleLink person={person} />\n              </td>\n              <td>{person.sex}</td>\n              <td>{person.born}</td>\n              <td>{person.died}</td>\n              <td>\n                {person.motherName\n                  ? getParent(person.motherName, mother)\n                  : '-'}\n              </td>\n              <td>\n                {person.fatherName\n                  ? getParent(person.fatherName, father)\n                  : '-'}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { SearchParams, getSearchWith } from '../../../../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { QueryParams } from '../../../types/QueryParams';\nimport { SearchParams, getSearchWith } from '../../../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  value: string;\n};\n\nexport const PeopleFilter: React.FC<Props> = ({ value }) => {\n  const numbersOfCenturies = ['16', '17', '18', '19', '20'];\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const sex = searchParams.get(QueryParams.Sex) || '';\n  const centuries = searchParams.getAll(QueryParams.Centuries) || [];\n\n  const setSearchWith = (param: SearchParams) => {\n    const newQuery = getSearchWith(searchParams, param);\n\n    setSearchParams(newQuery.toString());\n  };\n\n  const getCenturiesForSearch = (century: string) => {\n    return centuries.includes(century)\n      ? centuries.filter(currentCentury => currentCentury !== century)\n      : [...centuries, century];\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">\n        Filters\n      </p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          params={{ sex: null }}\n          className={classNames({\n            'is-active': !sex,\n          })}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'm' }}\n          className={classNames({\n            'is-active': sex === 'm',\n          })}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          params={{ sex: 'f' }}\n          className={classNames({\n            'is-active': sex === 'f',\n          })}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={value}\n            onChange={(e) => setSearchWith({ query: e.target.value || null })}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {numbersOfCenturies.map(currentCentury => (\n              <SearchLink\n                data-cy=\"century\"\n                key={currentCentury}\n                params={{ centuries: getCenturiesForSearch(currentCentury) }}\n                className={classNames('button mr-1', {\n                  'is-info': centuries.includes(currentCentury),\n                })}\n              >\n                {currentCentury}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              params={{ centuries: null }}\n              className={classNames('button', 'is-success', {\n                'is-outlined': centuries.length > 0,\n              })}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          params={{ query: null, sex: null, centuries: null }}\n          className=\"button is-link is-outlined is-fullwidth\"\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\nimport { Loader } from '../Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { QueryParams } from '../../types/QueryParams';\nimport { SortTypes } from '../../types/SortTypes';\nimport { PeopleFilter } from './PeopleFilter/PeopleFilter';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get(QueryParams.Query) || '';\n  const sex = searchParams.get(QueryParams.Sex) || '';\n  const sort = searchParams.get(QueryParams.Sort) || '';\n  const order = searchParams.get(QueryParams.Order) || '';\n  const centuries = searchParams.getAll(QueryParams.Centuries) || [];\n\n  const filteredPeople = useMemo(() => {\n    let filterResult = [...people];\n\n    if (query) {\n      const queryToLower = query.toLowerCase();\n\n      filterResult = filterResult.filter(\n        currentPerson => currentPerson.name.toLowerCase().includes(queryToLower)\n        || currentPerson.motherName?.toLowerCase().includes(queryToLower)\n        || currentPerson.fatherName?.toLowerCase().includes(queryToLower),\n      );\n    }\n\n    if (sex) {\n      filterResult = filterResult.filter(\n        currentPerson => currentPerson.sex === sex,\n      );\n    }\n\n    if (centuries.length) {\n      filterResult = filterResult.filter(currentPerson => centuries.includes(\n        Math.ceil(currentPerson.born / 100).toString(),\n      ));\n    }\n\n    if (sort) {\n      filterResult = [...filterResult].sort((person1, person2) => {\n        const first = order ? person1 : person2;\n        const second = order ? person2 : person1;\n\n        switch (sort) {\n          case SortTypes.Name:\n            return second.name.localeCompare(first.name);\n\n          case SortTypes.Sex:\n            return second.sex.localeCompare(first.sex);\n\n          case SortTypes.Born:\n            return +second.born - +first.born;\n\n          case SortTypes.Died:\n            return +second.died - +first.died;\n\n          default:\n            return 0;\n        }\n      });\n    }\n\n    return filterResult;\n  }, [query, sex, centuries, sort, order]);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">\n        People Page\n      </h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n\n              <div className=\"column is-7-tablet is-narrow-desktop\">\n                <PeopleFilter value={query} />\n              </div>\n\n              <div className=\"column\">\n                <div className=\"box table-container\">\n                  {isError ? (\n                    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                      Something went wrong\n                    </p>\n                  ) : (\n                    <>\n                      {people.length ? (\n                        <>\n                          {filteredPeople.length ? (\n                            <PeopleTable people={filteredPeople} />\n                          ) : (\n                            <p>\n                              There are no people matching\n                              the current search criteria\n                            </p>\n                          )}\n                        </>\n                      ) : (\n                        <p data-cy=\"noPeopleMessage\">\n                          There are no people on the server\n                        </p>\n                      )}\n                    </>\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './ErrorPage.scss';\n\nexport const ErrorPage: React.FC = () => (\n  <section className=\"error-page\">\n    <div className=\"container\">\n      <div className=\"error-page__content\">\n        <div className=\"error-page--bg\">\n          <h1 className=\"title\">\n            Page not found\n          </h1>\n\n        </div>\n\n        <div className=\"error-page__description\">\n          <h3 className=\"label\">\n            Look like you&apos;re lost\n          </h3>\n\n          <p>\n            the page you are looking for not avaible!\n          </p>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n","import {\n  HashRouter,\n  Navigate,\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { ErrorPage } from './components/ErrorPage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" replace />}\n        />\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\nconst container = document.getElementById('root') as HTMLElement;\n\ncreateRoot(container)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}